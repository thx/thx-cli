{"version":3,"sources":["webpack://@ali/mm-kit-magix/./web/component/toast/toast.js","webpack://@ali/mm-kit-magix/webpack/runtime/getFullHash"],"names":["id","timeout","messages","uuid","Toast","props","visible","map","m","level","message","container","init","ReactDOM","length","document","getElementById","createElement","setAttribute","body","appendChild","msg","auto","Date","getTime","unshift","pop","run","setTimeout","hide","filter","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAEA,IAAMA,EAAE,GAAG,wBAAX;AACA,IAAMC,OAAO,GAAG,IAAhB;AAEA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,IAAI,GAAG,CAAX;;IAEMC,K;;;;;;;;;;;;;WA6CJ,kBAAU;AACR,0BACE,2DAAC,gDAAD;AACE,eAAO,EAAE,KAAKC,KAAL,CAAWC,OADtB;AAEE,eAAO,EAAE,KAFX;AAGE,aAAK,EAAC,OAHR;AAIE,cAAM,EAAE,CAAC,CAAD,EAAI,GAAJ;AAJV,sBAME,uEACG,KAAKD,KAAL,CAAWH,QAAX,CAAoBK,GAApB,CACC,UAAAC,CAAC;AAAA,4BACC;AAAI,aAAG,EAAEA,CAAC,CAACR;AAAX,wBACE;AAAK,mBAAS,EAAC;AAAf,wBACE,2DAAC,gDAAD;AAAS,cAAI,EAAEQ,CAAC,CAACC,KAAF,IAAW,SAA1B;AAAqC,eAAK,EAAC;AAA3C,wBACE;AAAG,mBAAS,EAAC,cAAb;AAA4B,eAAK,EAAED,CAAC,CAACE;AAArC,WACGF,CAAC,CAACE,OADL,CADF,CADF,CADF,CADD;AAAA,OADF,CADH,CANF,CADF;AAwBD;;;WArED,aAAYR,QAAZ,EAAsB;AACpB,UAAMS,SAAS,GAAGP,KAAK,CAACQ,IAAN,EAAlB;AACAC,6DAAA,eAAgB,2DAAC,KAAD;AAAO,eAAO,EAAEX,QAAQ,CAACY,MAAT,GAAkB,CAAlC;AAAqC,gBAAQ,EAAEZ;AAA/C,QAAhB,EAA6ES,SAA7E;AACD;;;WAED,gBAAe;AACb,UAAIA,SAAS,GAAGI,QAAQ,CAACC,cAAT,CAAwBhB,EAAxB,CAAhB;;AACA,UAAI,CAACW,SAAL,EAAgB;AACdA,iBAAS,GAAGI,QAAQ,CAACE,aAAT,CAAuB,KAAvB,CAAZ;AACAN,iBAAS,CAACO,YAAV,CAAuB,IAAvB,EAA6BlB,EAA7B;AACAe,gBAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BT,SAA1B;AACD;;AAED,aAAOA,SAAP;AACD;;;WAED,cAAaU,GAAb,EAAkD;AAAA;;AAAA,UAAhCC,IAAgC,uEAAzB,IAAyB;AAAA,UAAnBb,KAAmB,uEAAX,SAAW;AAChD,UAAMT,EAAE,kBAAWG,IAAI,EAAf,cAAqB,IAAIoB,IAAJ,GAAWC,OAAX,EAArB,CAAR;AACAtB,cAAQ,CAACuB,OAAT,CAAiB;AACfzB,UAAE,EAAFA,EADe;AAEfU,eAAO,EAAEW,GAFM;AAGfZ,aAAK,EAAEA;AAHQ,OAAjB;;AAMA,aAAOP,QAAQ,CAACY,MAAT,GAAkB,EAAzB,EAA6B;AAC3BZ,gBAAQ,CAACwB,GAAT;AACD;;AAEDtB,WAAK,CAACuB,GAAN,CAAUzB,QAAV;;AAEA,UAAIoB,IAAJ,EAAU;AACRM,kBAAU,CAAC,YAAM;AACf,eAAI,CAACC,IAAL,CAAU7B,EAAV;AACD,SAFS,EAEPC,OAFO,CAAV;AAGD;;AAED,aAAOD,EAAP;AACD;;;WAED,cAAaA,EAAb,EAAiB;AACfE,cAAQ,GAAGA,QAAQ,CAAC4B,MAAT,CAAgB,UAAAtB,CAAC;AAAA,eAAIA,CAAC,CAACR,EAAF,KAASA,EAAb;AAAA,OAAjB,CAAX;AACAI,WAAK,CAACuB,GAAN,CAAUzB,QAAV;AACD;;;;EA3CiB6B,wD;;AAyEpB,iEAAe3B,KAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtFA,sD","file":"index.734984e8ebe674b707ae.hot-update.js","sourcesContent":["import './toast.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Overlay, Message } from '@alifd/next'\n\nconst id = 'global-toast-container'\nconst timeout = 3000\n\nlet messages = []\nlet uuid = 0\n\nclass Toast extends React.Component {\n  static run (messages) {\n    const container = Toast.init()\n    ReactDOM.render(<Toast visible={messages.length > 0} messages={messages} />, container)\n  }\n\n  static init () {\n    let container = document.getElementById(id)\n    if (!container) {\n      container = document.createElement('div')\n      container.setAttribute('id', id)\n      document.body.appendChild(container)\n    }\n\n    return container\n  }\n\n  static show (msg, auto = true, level = 'warning') {\n    const id = `item-${uuid++}-${new Date().getTime()}`\n    messages.unshift({\n      id,\n      message: msg,\n      level: level\n    })\n\n    while (messages.length > 10) {\n      messages.pop()\n    }\n\n    Toast.run(messages)\n\n    if (auto) {\n      setTimeout(() => {\n        this.hide(id)\n      }, timeout)\n    }\n\n    return id\n  }\n\n  static hide (id) {\n    messages = messages.filter(m => m.id !== id)\n    Toast.run(messages)\n  }\n\n  render () {\n    return (\n      <Overlay\n        visible={this.props.visible}\n        hasMask={false}\n        align='tc tc'\n        offset={[0, 100]}\n      >\n        <ul>\n          {this.props.messages.map(\n            m => (\n              <li key={m.id}>\n                <div className='global-toast'>\n                  <Message type={m.level || 'warning'} title='提示'>\n                    <p className='message-body' title={m.message}>\n                      {m.message}\n                    </p>\n                  </Message>\n                </div>\n              </li>\n            )\n          )}\n        </ul>\n      </Overlay>\n    )\n  }\n}\n\nexport default Toast\n","__webpack_require__.h = () => (\"46986843e6e7ce45f999\")"],"sourceRoot":""}